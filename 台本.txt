チームSNHの成果発表をはじめます。

（クリック）

まずは、単独走行用のAIについて話します。

（クリック）

用いた戦略は、取り逃し処理、取る直前にハンドルを切る、ブレーキのタイイングを数学的に算出する、２点間の直線に入る、です。

（クリック）

まず、取り逃し処理ですが、これはハタを取り逃したと判断したら、ハタと逆にハンドルを切って、
取り逃しを回避します。

口頭ではどういう動きをするのか伝わらないと思うので、アニメーションを用いて挙動を説明します。

（クリック）

ここで、取り逃したと判断されます。

（クリック）

そうすると、ハタと逆方向にハンドルをきって、大きく膨らむような軌跡を描きながら
次のハタを取りに行きます。

（クリック）

次は、取る直前にハンドルを切る、という処理です。これはハタを取る直前につぎの次のハタに向かってハンドルを切っているだけです。

（クリック）
ブレーキのタイミングを数学的に算出する、ですが、これはタイトルだけでは意味が全くわからないと思います。

効率よくハタを取るためには、次のハタへ闇雲に突っ込むのではなく、次の次のハタへ向かいやすいようにブレーキをかける必要があります。

このブレーキをかけるタイミングを、どのようにしたら算出できるのかを考えました。

例として、スピードを10から6にしたいときはどのように導いているのか、を説明します。

（クリック）

まず、このグラフは車の速度と距離の関係をプロットしたものになります。
今、スピードが10なので、その時のx軸を読みます。
次に、スピードを10から6に減速したいので、スピードが6の時のx軸を読みます。
必要な距離というのは、スピードが10の時の距離 - スピードが6の時の距離、つまり
150 - 50 で 100だということがわかります。
この考え方を用いて、私達はブレーキをかけるタイミングを算出しています。

（クリック）








